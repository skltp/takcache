package se.skltp.tak.vagvalsinfo.wsdl.v2;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 4.0.5
 * 2024-09-13T10:04:51.476+02:00
 * Generated source version: 4.0.5
 *
 */
@WebServiceClient(name = "SokVagvalsServiceSoap11LitDocService",
                  wsdlLocation = "file:/C:/Git/tak/tak-schemas/src/main/resources/schemas/VAGVAL_2_0/interactions/vagvalsInfo/wrapped-vagvalsinfo-sokvagvalsinfo-2.0.wsdl",
                  targetNamespace = "urn:skl:tp:vagvalsinfo:v2")
public class SokVagvalsServiceSoap11LitDocService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("urn:skl:tp:vagvalsinfo:v2", "SokVagvalsServiceSoap11LitDocService");
    public static final QName SokVagvalsSoap11LitDocPort = new QName("urn:skl:tp:vagvalsinfo:v2", "SokVagvalsSoap11LitDocPort");
    static {
        URL url = null;
        try {
            url = URI.create("file:/C:/Git/tak/tak-schemas/src/main/resources/schemas/VAGVAL_2_0/interactions/vagvalsInfo/wrapped-vagvalsinfo-sokvagvalsinfo-2.0.wsdl").toURL();
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SokVagvalsServiceSoap11LitDocService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Git/tak/tak-schemas/src/main/resources/schemas/VAGVAL_2_0/interactions/vagvalsInfo/wrapped-vagvalsinfo-sokvagvalsinfo-2.0.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SokVagvalsServiceSoap11LitDocService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SokVagvalsServiceSoap11LitDocService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SokVagvalsServiceSoap11LitDocService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SokVagvalsServiceSoap11LitDocService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SokVagvalsServiceSoap11LitDocService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SokVagvalsServiceSoap11LitDocService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SokVagvalsInfoInterface
     */
    @WebEndpoint(name = "SokVagvalsSoap11LitDocPort")
    public SokVagvalsInfoInterface getSokVagvalsSoap11LitDocPort() {
        return super.getPort(SokVagvalsSoap11LitDocPort, SokVagvalsInfoInterface.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SokVagvalsInfoInterface
     */
    @WebEndpoint(name = "SokVagvalsSoap11LitDocPort")
    public SokVagvalsInfoInterface getSokVagvalsSoap11LitDocPort(WebServiceFeature... features) {
        return super.getPort(SokVagvalsSoap11LitDocPort, SokVagvalsInfoInterface.class, features);
    }

}
